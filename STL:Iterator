#include <iostream>
#include <vector>
#include <iterator>
using namespace std;
int main()
{
    vector<int> ar;
    ar.push_back(11);
    ar.push_back(23);
    ar.push_back(43);
    ar.push_back(48);
    ar.push_back(5);
    ar.push_back(12);
    ar.push_back(29);
    cout << ar[0];
    int n = ar.size();
    for (int i = 1; i < n; i++)
        cout << " " <<ar[i];
    cout << endl;
    vector<int>::iterator ptr1, ptr2;

    ptr1 = ar.begin();
    cout << "First element is : " << *ptr1 << "\n";
    // [cout << ptr1 << "\n";] will give error.Pointer's can not be printed in console.

    ptr2 = ar.end();
    // ptr2 points out to the next memory address of last element.
    // [cout << "Last element is : " << *ptr2 << "\n";]  wrong statement because last elemment is not in ptr2.
    // [cout << ptr2 << "\n";] is also wrong statement

    //However we can get length of vector by ptr2 ans ptr1 since pointer(+-)pointer gives integer value.
    cout << "Length is : " << ptr2-ptr1 << "\n";

    //Last or any element using prev and next

    //Last element
    vector<int>::iterator ptrLast;
    ptrLast = std::prev(ptr2, 1);
    cout << "Last element is : " << *ptrLast << "\n";

    //Last second element
    vector<int>::iterator ptrLast2 = std::prev(ptr2, 2);

    //Second element of vector
    vector<int>::iterator ptr2nd;
    ptr2nd = std::next(ptr1, 1);
    cout << "Second element is : " << *ptr2nd << "\n";

    //Third element
    vector<int>::iterator ptr3rd = std::next(ptr1, 2);
    cout << "Third element is : " << *ptr3rd << "\n";

    //Last Second element
    vector<int>::iterator ptrlast2nd = std::prev(ptr2, 2);
    cout << "Last second element is : " << *ptrlast2nd << endl;

    //Last Third element
    vector<int>::iterator ptrlast3rd = std::prev(ptr2, 3);
    cout << "Last second element is : " << *ptrlast3rd << endl;
}


Output:
11 23 43 48 5 12 29
First element is : 11
Length is : 7
Last element is : 29
Second element is : 23
Third element is : 43
Last second element is : 12
Last second element is : 5
