vector<int> vec;
vec.push_back(3);[Adds as a last elemnt]
vec.push_back(45);
vec.push_back(23);
vec.push_back(56);
vec.push_back(12);
vec.push_back(56);


Methods:
------------------------------------------------------------------------------
Pointer/iterator
#include <iterator>
1.int n = vec.size();
2.vec.begin():
  vector<int>::iterator it = vec.begin();
  // returns iterator(pointer) to first index(0) 
  cout << *it << "\n"; //prints vec[0]
  //However, [cout << it <<"\n";] will cause error
3.vector::end() 
  vector<int>::iterator it = vec.end();
  // returns null iterator(null pointer) to v[n].
  //Since,v[n] is null it cannot be accesed as *it = vec[n]
  // [cout << it <<"\n";] & [cout << *it <<"\n";] will cause error
4.inserting by iterator
//vec.insert(iterator_var,element);
vec.insert(vec.begin(),element); // inserting at first position
------------------------------------------------------------------------------
Accessing,adding,deletinhg
1.cout << vec.back() <<"\n"; // vec.back() = vec[n-1]
2.cout << vec.front() <<"\n"; // vec.front() = vec[0]
3.vec.pop_back(); // Void function.Deletes last element
4.vec[2]; //accessing 2nd element(0 based indexing)
5.vec.at(2); //accessing 2nd element(0 based indexing)
6.vec.clear(); //nullification of vector vec
7.vec.erase(v.begin()+4); //erases the fifth element of the vector v
8.v.erase(v.begin()+2,v.begin()+5); //erases all the elements from the third element to the fifth element
<----------------------------------->
Basic vector code and output:
Code->
#include <bits/stdc++.h>
#include <vector>
#include <iterator> 
using std::cin;
using std::cout;
using std::vector;
int main()
{
 vector<long int> vec(11,8);
 for(int i = 0;i<=vec.size()-1;i++)
    cout<<"Inedx "<<i<<" : "<<vec[i]<<"\n";
} 
Output->
Inedx 0 : 8                                                                                                                                   
Inedx 1 : 8                                                                                                                                   
Inedx 2 : 8                                                                                                                                   
Inedx 3 : 8
Inedx 4 : 8                                                                                                                                   
Inedx 5 : 8                                                                                                                                   
Inedx 6 : 8                                                                                                                                   
Inedx 7 : 8                                                                                                                                   
Inedx 8 : 8                                                                                                                                   
Inedx 9 : 8                                                                                                                                   
Inedx 10 : 8  

<----------------------------------->

#General traversing:
vector<int> ar = { 11, 23, 43, 48, 5, 12, 29 };
for(int x : ar)
    cout<<x<<"\n";
cout<<"\n"; 






